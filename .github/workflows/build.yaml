name: Build
on:
  push:
  pull_request:

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - { os: 'ubuntu-latest', name: 'linux-x64', suffix: '' }
          - { os: 'macos-latest', name: 'darwin-x64', suffix: '' }
          - { os: 'windows-latest', name: 'win32-x64', suffix: '.exe' }

    steps:
      - name: Install dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y ninja-build clang-12 lld-12 g++-multilib
          echo "CC=clang-12" >> $GITHUB_ENV
          echo "CXX=clang++-12" >> $GITHUB_ENV

      - name: Install dependencies (macOS)
        if: runner.os == 'macOS'
        run: |
          HOMEBREW_NO_AUTO_UPDATE=1 HOMEBREW_NO_INSTALL_CLEANUP=1 \
            brew install ninja
          sudo xcode-select -switch /Applications/Xcode_12.4.app
          echo "CC=clang" >> $GITHUB_ENV
          echo "CXX=clang++" >> $GITHUB_ENV

      - name: Prepare Windows environment (Visual Studio)
        if: runner.os == 'Windows'
        uses: ilammy/msvc-dev-cmd@v1.5.0
        with:
          arch: x64

      - name: Install dependencies (Windows)
        if: runner.os == 'Windows'
        shell: powershell
        run: |
          $ErrorActionPreference = 'Stop'

          # The test suite currently requires that the compiler specified by the
          # "CC" environment variable is on a path without spaces. Provide that
          # by creating a junction from ~/opt/llvm to the Visual Studio path.
          $null = New-Item `
            -Path "${HOME}\opt\llvm" `
            -ItemType Junction `
            -Target "${env:VCINSTALLDIR}\Tools\Llvm\x64" `
            -Force
          "Path=${HOME}\opt\llvm\bin;${env:Path}" | `
            Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

          "CC=cl" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          "CXX=cl" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Get source
        uses: actions/checkout@v3

      - name: Build
        run: ci/build
        env:
          CMAKE_GENERATOR: Ninja
          CMAKE_PARAMS: >-
            -DCMAKE_BUILD_TYPE=Release
            -DSTATIC_LINK=ON
            -DZSTD_FROM_INTERNET=ON
            -DHIREDIS_FROM_INTERNET=ON
            -DENABLE_TRACING=OFF
            -DENABLE_DOCUMENTATION=OFF
            -DENABLE_TESTING=OFF
          RUN_TESTS: none

      - uses: actions/upload-artifact@v3
        with:
          name: ccache-${{ matrix.os }}
          path: build/ccache${{ matrix.suffix }}
          if-no-files-found: error

      - name: Pack distribution
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        uses: thedoctor0/zip-release@main
        with:
          type: zip
          directory: build
          filename: ../ccache-${{ matrix.name }}.zip
          path: ccache${{ matrix.suffix }}

      - name: Upload release
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        uses: svenstaro/upload-release-action@v2
        with:
          file: ccache-${{ matrix.name }}.zip
          tag: ${{ github.ref }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
